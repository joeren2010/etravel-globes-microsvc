package com.globes.entity;

import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Arrays;
import java.util.Date;
import java.util.List;


import javax.persistence.*;

@Entity
@Table(name="cab")
@NamedQuery(name="Cab.findAll", query="SELECT c FROM Cab c")
public class Cab {
	//add fields
	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="cabid")					//tells springboot to map to cabid
	private int cabId;						//by default: springboot will map this to cab_id
	@Column(name="cabcolor")	
	private String cabColor;
	@Column(name="cabtitle")
	private String cabTitle;
	@Column(name="cabdescription")	
	private String cabDescription;
	private int price;
	
	@ElementCollection							//stores a list of values as an entity
	@OrderColumn(name="imageid")				//ensures the order in the column is maintained
	@CollectionTable(name="imageinfo")			//defines the table name
	@Lob										//specifies the datatype "blob" type
	@Column(columnDefinition="LONGBLOB")		//ensures "longblob" is the assigned "blob" type
	private String images[];					//array-field for array-table	

	@Column(name="thumbnailimage")
	private int thumbnailImage;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="addedon")						//tells springboot to map to addedon
	private Date addedOn;						//by default: springboot will map this to added_on
	private int rating;
	@Column(name="pickuploc")	
	private String pickupLoc;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="pickupdate")	
	private LocalDate pickupDate;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="pickuptime")	
	private LocalTime pickupTime;
	@Column(name="dropoffloc")	
	private String dropoffLoc;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="dropoffdate")	
	private LocalDate dropoffDate;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name="dropofftime")	
	private LocalTime dropoffTime;
//	@Column(name="categoryid")					//tells springboot to map to cabid
//	private int categoryId;						//by default: springboot will map this to cab_id
	
	//bi-directional many-to-one association to Category
	//@JsonIgnore
	@ManyToOne
	//@JoinColumn(name="categoryId", nullable=false)
	@JoinColumn(name="categoryid", nullable=false)
	//@JoinColumn(name="cabid", referencedColumnName="categoryid", insertable = false, updatable = false, nullable=false)
	private Category category;
//	//bi-directional many-to-one association to Cart
//	@OneToMany(mappedBy="cab")
//	private List<Cart> carts;
//	//bi-directional many-to-one association to Orderitem
//	@OneToMany(mappedBy="cab")
//	private List<Orderitem> orderitems;
//	//bi-directional many-to-one association to Wishlist
//	@OneToMany(mappedBy="cab")
//	private List<Wishlist> wishlists;
	
	//default constructor
	public Cab() {
		super();
	}

	//parameterized constructor
	

	//getter and setter methods


	//override to-string method


}
